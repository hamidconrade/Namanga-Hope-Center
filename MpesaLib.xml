<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MpesaLib</name>
    </assembly>
    <members>
        <member name="T:MpesaLib.AccountBalanceDto">
            <summary>
            Accountbalance data transfer object
            </summary>
        </member>
        <member name="P:MpesaLib.AccountBalanceDto.Initiator">
            <summary>
            This is the credential/username used to authenticate the transaction request.
            </summary>
        </member>
        <member name="P:MpesaLib.AccountBalanceDto.SecurityCredential">
            <summary>
            Base64 encoded string of the Security Credential, which is encrypted using M-Pesa public key and 
            validates the transaction on M-Pesa Core system.
            </summary>
        </member>
        <member name="P:MpesaLib.AccountBalanceDto.CommandID">
            <summary>
            A unique command passed to the M-Pesa system.
            </summary>
        </member>
        <member name="P:MpesaLib.AccountBalanceDto.PartyA">
            <summary>
            The shortcode of the organisation receiving the transaction.
            </summary>
        </member>
        <member name="P:MpesaLib.AccountBalanceDto.IdentifierType">
            <summary>
            Type of the organisation receiving the transaction.
            </summary>
        </member>
        <member name="P:MpesaLib.AccountBalanceDto.Remarks">
            <summary>
            Comments that are sent along with the transaction.
            </summary>
        </member>
        <member name="P:MpesaLib.AccountBalanceDto.QueueTimeOutURL">
            <summary>
            The timeout end-point that receives a timeout message.
            </summary>
        </member>
        <member name="P:MpesaLib.AccountBalanceDto.ResultURL">
            <summary>
            The end-point that receives a successful transaction.
            </summary>
        </member>
        <member name="M:MpesaLib.AccountBalanceDto.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Accountbalance data transfer object
            </summary>
            <param name="intiator">
            This is the credential/username used to authenticate the transaction request.
            </param>
            <param name="securityCredential">
            Base64 encoded string of the Security Credential, which is encrypted using M-Pesa public key and 
            validates the transaction on M-Pesa Core system.
            </param>
            <param name="commandId">A unique command passed to the M-Pesa system.</param>
            <param name="partyA">The shortcode of the organisation receiving the transaction.</param>
            <param name="identifierType">Type of the organisation receiving the transaction.</param>
            <param name="remarks">Comments that are sent along with the transaction.</param>
            <param name="queueTimeoutUrl">The timeout end-point that receives a timeout message.</param>
            <param name="resultUrl">The end-point that receives a successful transaction.</param>
        </member>
        <member name="T:MpesaLib.BusinessToBusinessDto">
            <summary>
            B2B Data transfer object
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToBusinessDto.Initiator">
            <summary>
            This is the credential/username used to authenticate the transaction request.
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToBusinessDto.SecurityCredential">
            <summary>
            Base64 encoded string of the Security Credential, which is encrypted using M-Pesa public key and 
            validates the transaction on M-Pesa Core system.
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToBusinessDto.CommandID">
            <summary>
            Unique command for each transaction type, possible values are: BusinessPayBill, MerchantToMerchantTransfer,
            MerchantTransferFromMerchantToWorking, MerchantServicesMMFAccountTransfer, AgencyFloatAdvance
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToBusinessDto.SenderIdentifierType">
            <summary>
            Type of organization sending the transaction.
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToBusinessDto.RecieverIdentifierType">
            <summary>
            Type of organization receiving the funds being transacted.
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToBusinessDto.Amount">
            <summary>
            The amount being transacted.
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToBusinessDto.PartyA">
            <summary>
            Organization’s short code initiating the transaction.
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToBusinessDto.PartyB">
            <summary>
            Organization’s short code receiving the funds being transacted.
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToBusinessDto.AccountReference">
            <summary>
            Account Reference mandatory for “BusinessPaybill” CommandID.
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToBusinessDto.Remarks">
            <summary>
            Comments that are sent along with the transaction.
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToBusinessDto.QueueTimeOutURL">
            <summary>
            The path that stores information of time out transactions. It should be properly validated to 
            make sure that it contains the port, URI and domain name or publicly available IP.
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToBusinessDto.ResultURL">
            <summary>
            The path that receives results from M-Pesa. It should be properly validated to make sure 
            that it contains the port, URI and domain name or publicly available IP.
            </summary>
        </member>
        <member name="M:MpesaLib.BusinessToBusinessDto.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            B2B data transfer object
            </summary>
            <param name="intiator">This is the credential/username used to authenticate the transaction request.</param>
            <param name="securityCredential">
            Base64 encoded string of the Security Credential, which is encrypted using M-Pesa public key and 
            validates the transaction on M-Pesa Core system.
            </param>
            <param name="commandId">
            Unique command for each transaction type, possible values are: BusinessPayBill, MerchantToMerchantTransfer,
            MerchantTransferFromMerchantToWorking, MerchantServicesMMFAccountTransfer, AgencyFloatAdvance
            </param>
            <param name="amount">The amount being transacted.</param>
            <param name="partyA">Organization’s short code initiating the transaction.</param>
            <param name="partyB">Organization’s short code receiving the funds being transacted.</param>
            <param name="senderIdentifierType">Type of organization sending the transaction.</param>
            <param name="receiverIdentifierType">Type of organization receiving the transaction.</param>
            <param name="accountReference">Account Reference mandatory for “BusinessPaybill” CommandID.</param>
            <param name="remarks">Comments that are sent along with the transaction.</param>
            <param name="queueTimeoutUrl">
            The path that stores information of time out transactions. It should be properly validated to 
            make sure that it contains the port, URI and domain name or publicly available IP.
            </param>
            <param name="resultUrl">
            The path that receives results from M-Pesa. It should be properly validated to make sure 
            that it contains the port, URI and domain name or publicly available IP.
            </param>
        </member>
        <member name="T:MpesaLib.BusinessToCustomerDto">
            <summary>
            B2C data transfer object
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToCustomerDto.InitiatorName">
            <summary>
            The username of the M-Pesa B2C account API operator.
            NOTE: the access channel for this operator must be API and the account must be in active status.
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToCustomerDto.SecurityCredential">
            <summary>
            This is the value obtained after encrypting the API initiator password.
            MpesaLib Provides the <c>Credentials.EncryptPassword</c> under MpesaLib.Helpers namespace to help you 
            with the encryption. You need a public certificate from Safaricom for either sandbox or live APIs for this to work.
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToCustomerDto.CommandID">
            <summary>
            This is a unique command that specifies B2C transaction type.
            SalaryPayment: This supports sending money to both registered and unregistered M-Pesa customers.
            BusinessPayment: This is a normal business to customer payment, supports only M-Pesa registered customers.
            PromotionPayment: This is a promotional payment to customers.The M-Pesa notification message is a 
            congratulatory message. Supports only M-Pesa registered customers.
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToCustomerDto.Amount">
            <summary>
            The amount of money being sent to the customer.
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToCustomerDto.PartyA">
            <summary>
            This is the B2C organization shortcode from which the money is to be sent.
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToCustomerDto.PartyB">
            <summary>
            This is the customer mobile number  to receive the amount.
            The number should have the country code (254) without the plus sign i.e 2547XXXXXXXX.
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToCustomerDto.Remarks">
            <summary>
            Any additional information to be associated with the transaction. (Upto 100 characters)
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToCustomerDto.QueueTimeOutURL">
            <summary>
            This is the URL to be specified in your request that will be used by API Proxy to send notification 
            incase the payment request is timed out while awaiting processing in the queue. 
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToCustomerDto.ResultURL">
            <summary>
            This is the URL to be specified in your request that will be used by M-Pesa to send notification upon 
            processing of the payment request.
            </summary>
        </member>
        <member name="P:MpesaLib.BusinessToCustomerDto.Occasion">
            <summary>
            Any additional information to be associated with the transaction. (Upto 100 characters)
            </summary>
        </member>
        <member name="M:MpesaLib.BusinessToCustomerDto.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            B2C data transfer object
            </summary>
            <param name="intiatorName">
            The username of the M-Pesa B2C account API operator.
            NOTE: the access channel for this operator must be API and the account must be in active status.
            </param>
            <param name="securityCredential">
            This is the value obtained after encrypting the API initiator password.
            MpesaLib Provides the <c>Credentials.EncryptPassword</c> under MpesaLib.Helpers namespace to help you 
            with the encryption. You need a public certificate from Safaricom for either sandbox or live APIs for this to work.
            </param>
            <param name="commandId">
            This is a unique command that specifies B2C transaction type.
            SalaryPayment: This supports sending money to both registered and unregistered M-Pesa customers.
            BusinessPayment: This is a normal business to customer payment, supports only M-Pesa registered customers.
            PromotionPayment: This is a promotional payment to customers.The M-Pesa notification message is a 
            congratulatory message. Supports only M-Pesa registered customers.
            </param>
            <param name="amount">The amount of money being sent to the customer.</param>
            <param name="partyA">This is the B2C organization shortcode from which the money is to be sent.</param>
            <param name="partyB">
            This is the customer mobile number  to receive the amount.
            The number should have the country code (254) without the plus sign i.e 2547XXXXXXXX.
            </param>
            <param name="remarks">Any additional information to be associated with the transaction. (Upto 100 characters)</param>
            <param name="occasion">Any additional information to be associated with the transaction. (Upto 100 characters)</param>
            <param name="queueTimeoutUrl">
            This is the URL to be specified in your request that will be used by API Proxy to send notification 
            incase the payment request is timed out while awaiting processing in the queue. 
            </param>
            <param name="resultUrl">
            This is the URL to be specified in your request that will be used by M-Pesa to send notification upon 
            processing of the payment request.
            </param>
        </member>
        <member name="T:MpesaLib.CustomerToBusinessRegisterUrlDto">
            <summary>
            C2B Register URLs data transfer object
            </summary>
        </member>
        <member name="P:MpesaLib.CustomerToBusinessRegisterUrlDto.ShortCode">
            <summary>
            The short code of the organization. 
            </summary>      
        </member>
        <member name="P:MpesaLib.CustomerToBusinessRegisterUrlDto.ResponseType">
            <summary>
            This parameter specifies what is to happen if for any reason the validation URL is nor reachable. 
            Note that, This is the default action value that determines what MPesa will do in the scenario that your
            endpoint is unreachable or is unable to respond on time. 
            Only two values are allowed: Completed or Cancelled. 
            Completed means MPesa will automatically complete your transaction, in the event MPesa is unable to 
            reach your Validation URL 
            Cancelled means MPesa will automatically cancel the transaction, in the event MPesa is unable to 
            reach your Validation URL.
            </summary>
        </member>
        <member name="P:MpesaLib.CustomerToBusinessRegisterUrlDto.ConfirmationURL">
            <summary>
            This is the URL that receives the confirmation request from API upon payment completion.
            </summary>
        </member>
        <member name="P:MpesaLib.CustomerToBusinessRegisterUrlDto.ValidationURL">
            <summary>
            This is the URL that receives the validation request from API upon payment submission. 
            The validation URL is only called if the external validation on the registered shortcode is enabled. 
            (By default External Validation is dissabled, contact MPESA API team if you want this enbaled for your app)
            </summary>
        </member>
        <member name="M:MpesaLib.CustomerToBusinessRegisterUrlDto.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            C2B Register URLs data transfer object
            </summary>
            <param name="shortCode">The short code of the organization. </param>
            <param name="responseType">
            This parameter specifies what is to happen if for any reason the validation URL is nor reachable. 
            Note that, This is the default action value that determines what MPesa will do in the scenario that your
            endpoint is unreachable or is unable to respond on time. 
            Only two values are allowed: Completed or Cancelled. 
            Completed means MPesa will automatically complete your transaction, in the event MPesa is unable to 
            reach your Validation URL 
            Cancelled means MPesa will automatically cancel the transaction, in the event MPesa is unable to 
            reach your Validation URL.
            </param>
            <param name="confirmationUrl">This is the URL that receives the confirmation request from API upon payment completion.</param>
            <param name="validationUrl">
            This is the URL that receives the validation request from API upon payment submission. 
            The validation URL is only called if the external validation on the registered shortcode is enabled. 
            (By default External Validation is dissabled, contact MPESA API team if you want this enbaled for your app)
            </param>
        </member>
        <member name="T:MpesaLib.CustomerToBusinessSimulateDto">
            <summary>
            C2B Simulate data transfer object
            </summary>
        </member>
        <member name="P:MpesaLib.CustomerToBusinessSimulateDto.ShortCode">
            <summary>
            This is the Short Code receiving the amount being transacted.
            </summary>
        </member>
        <member name="P:MpesaLib.CustomerToBusinessSimulateDto.CommandID">
            <summary>
            This is a unique identifier of the transaction type: There are two types of these Identifiers:
            CustomerPayBillOnline: This is used for Pay Bills shortcodes.
            CustomerBuyGoodsOnline: This is used for Buy Goods shortcodes.
            Buy Default this property is set to CustomerPayBillOnline
            </summary>
        </member>
        <member name="P:MpesaLib.CustomerToBusinessSimulateDto.Amount">
            <summary>
            This is the amount being transacted. The parameter expected is a numeric value.
            </summary>
        </member>
        <member name="P:MpesaLib.CustomerToBusinessSimulateDto.Msisdn">
            <summary>
            This is the phone number initiating the C2B transaction.(format: 2547XXXXXXXX)
            </summary>
        </member>
        <member name="P:MpesaLib.CustomerToBusinessSimulateDto.BillRefNumber">
            <summary>
            This is used on CustomerPayBillOnline option only. 
            This is where a customer is expected to enter a unique bill identifier, e.g an Account Number. 
            </summary>
        </member>
        <member name="M:MpesaLib.CustomerToBusinessSimulateDto.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            C2B Simulate data transfer object
            </summary>
            <param name="shortCode">This is the Short Code receiving the amount being transacted.</param>
            <param name="commandId">
            This is a unique identifier of the transaction type: There are two types of these Identifiers:
            CustomerPayBillOnline: This is used for Pay Bills shortcodes.
            CustomerBuyGoodsOnline: This is used for Buy Goods shortcodes.
            Buy Default this property is set to CustomerPayBillOnline
            </param>
            <param name="amount">
            This is the amount being transacted. The parameter expected is a numeric value.
            </param>
            <param name="msisdn">This is the phone number initiating the C2B transaction.(format: 2547XXXXXXXX)</param>
            <param name="billReferenceNumber">
            This is used on CustomerPayBillOnline option only. 
            This is where a customer is expected to enter a unique bill identifier, e.g an Account Number. 
            </param>
        </member>
        <member name="T:MpesaLib.Helpers.Credentials">
            <summary>
            Encrypt password helper class for MpesaLib
            </summary>
            <remarks>
            M-Pesa Core authenticates a transaction by decrypting the security credentials. 
            Security credentials are generated by encrypting the base64 encoded initiator password with M-Pesa’s public key, 
            a X509 certificate.
            The algorithm for generating security credentials is as follows:
            1. Write the unencrypted password into a byte array.
            2. Encrypt the array with the M-Pesa public key certificate.Use the RSA algorithm,
               and use PKCS #1.5 padding (not OAEP), and add the result to the encrypted stream.
            3. Convert the resulting encrypted byte array into a string using base64 encoding.
            The resulting base64 encoded string is the security credential.
            </remarks>
        </member>
        <member name="M:MpesaLib.Helpers.Credentials.EncryptPassword(System.String,System.String)">
            <summary>
            Encrypts Mpesa API Security Credential password
            </summary>
            <param name="certificatePath"></param>
            <param name="password"></param>       
            <returns>
            Encrypted password
            </returns>
        </member>
        <member name="M:MpesaLib.Helpers.Credentials.ReadCertificateFile(System.String)">
            <summary>
            Reads and returns certificate data in bytes
            </summary>
            <param name="fileName"></param>
            <returns>
            Certificate data in bytes
            </returns>
        </member>
        <member name="T:MpesaLib.Helpers.Exceptions.MpesaApiException">
            <summary>
            Mpesa Api Exceptions Helper class
            </summary>
        </member>
        <member name="P:MpesaLib.Helpers.Exceptions.MpesaApiException.StatusCode">
            <summary>
            Http Status code
            </summary>
        </member>
        <member name="P:MpesaLib.Helpers.Exceptions.MpesaApiException.Content">
            <summary>
            Content from  response body
            </summary>
        </member>
        <member name="T:MpesaLib.Helpers.RSACryptoServiceProviderExtensions">
            <summary>
            RSACryptoServiceProvider Extensions
            </summary>
        </member>
        <member name="M:MpesaLib.Helpers.RSACryptoServiceProviderExtensions.FromXmlString2(System.Security.Cryptography.RSACryptoServiceProvider,System.String)">
            <summary>
            Imports the specified XML String into the crypto service provider
            </summary>
            <remarks>
             .NET Core 2.0 doesn't provide an implementation of RSACryptoServiceProvider.FromXmlString/ToXmlString, so we have to do it ourselves.
            Source: https://gist.github.com/Jargon64/5b172c452827e15b21882f1d76a94be4/
            </remarks>
        </member>
        <member name="M:MpesaLib.Helpers.RSACryptoServiceProviderExtensions.ToXmlString3(System.Security.Cryptography.RSA,System.Boolean)">
            <summary>
            ToXmlString extention method for .net standard, netcoreapp
            </summary>
            <param name="rsa"></param>
            <param name="includePrivateParameters"></param>
            <returns></returns>
        </member>
        <member name="M:MpesaLib.Helpers.RSACryptoServiceProviderExtensions.ToXmlString2(System.Security.Cryptography.RSA,System.Boolean)">
            <summary>
            ToXmlString extention method for .net standard, netcoreapp
            </summary>
            <param name="rsa">RSA algorithm</param>
            <param name="includePrivateParameters"></param>
            <returns>XML String</returns>
        </member>
        <member name="T:MpesaLib.Helpers.Serialization.JSONStreamHelper">
            <summary>
            JSON Stream Serialization and Deserialization Helper Class
            </summary>
        </member>
        <member name="M:MpesaLib.Helpers.Serialization.JSONStreamHelper.DeserializeFromStream(System.IO.Stream)">
            <summary>
            Deserializes data from stream into a json object
            </summary>
            <param name="stream">stream of bytes</param>
            <returns></returns>
        </member>
        <member name="T:MpesaLib.IMpesaClient">
            <summary>
            IMpesaClient Interface
            </summary>
            <remarks>
            Provides all the Methods implemented by MpesaClient Class. 
            A developer can create their own implementation for example for tests/mocks by inheriting from this interface.
            </remarks>
        </member>
        <member name="M:MpesaLib.IMpesaClient.GetAuthTokenAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            GetAuthTokenAsync is an asynchronous method that requests for and returns an accesstoken from MPESA API Server.
            </summary>
            <param name="consumerKey">ConsumerKey provided by Safaricom in Daraja Portal.</param>
            <param name="consumerSecret">ConsumerSecret provided by Safaricom in Daraja Portal.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.AuthToken</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A string of characters representing the accesstoken.</returns>
        </member>
        <member name="M:MpesaLib.IMpesaClient.GetAuthToken(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            GetAuthTokenAsync is an asynchronous method that requests for and returns an accesstoken from MPESA API Server.
            </summary>
            <param name="consumerKey">ConsumerKey provided by Safaricom in Daraja Portal.</param>
            <param name="consumerSecret">ConsumerSecret provided by Safaricom in Daraja Portal.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.AuthToken</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A string of characters representing the accesstoken.</returns>
        </member>
        <member name="M:MpesaLib.IMpesaClient.MakeLipaNaMpesaOnlinePaymentAsync(MpesaLib.LipaNaMpesaOnlineDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Makes STK Push payment request to MPESA API Server.
            </summary>
            <param name="mpesaLipaOnlineDto">
            Data trnasfer object containing properties for the Lipa Na Mpesa Online API endpoint.
            </param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.LipaNaMpesaOnline</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing LNMO response data from MPESA API Server</returns>
        </member>
        <member name="M:MpesaLib.IMpesaClient.MakeLipaNaMpesaOnlinePayment(MpesaLib.LipaNaMpesaOnlineDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Makes an STK Push payment request to MPESA API Server.
            </summary>
            <param name="mpesaLipaOnlineDto">
            Data trnasfer object containing properties for the Lipa Na Mpesa Online API endpoint.
            </param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.LipaNaMpesaOnline</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API response</returns>
        </member>
        <member name="M:MpesaLib.IMpesaClient.QueryLipaNaMpesaTransactionAsync(MpesaLib.LipaNaMpesaQueryDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Queries Mpesa Online Transaction Status
            </summary>
            <param name="mpesaTransactionQueryDto">Transaction Query Data transfer object</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.QueryLipaNaMpesaOnlieTransaction</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>
            A JSON string containing data from MPESA API reposnse
            </returns>
            <remarks>
            Use only for transactions initiated with <c>MakeLipaNaMpesaOnlinePayment</c> method.
            For Other transaction based methods (C2B,B2C,B2B) use <c>QueryMpesaTransactionStatusAsync</c> method.
            </remarks>
        </member>
        <member name="M:MpesaLib.IMpesaClient.QueryLipaNaMpesaTransaction(MpesaLib.LipaNaMpesaQueryDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Queries Mpesa Online Transaction Status.
            </summary>
            <param name="mpesaTransactionQueryDto">Transaction Query Data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.QueryLipaNaMpesaOnlieTransaction</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>
            A JSON string containing data from MPESA API reposnse.
            </returns>
            <remarks>
            Use only for transactions initiated with <c>MakeLipaNaMpesaOnlinePayment</c> method.
            For Other transaction based methods (C2B, B2C, B2B, Accountbalance, Reversal) 
            use <c>QueryMpesaTransactionStatusAsync</c> method.
            </remarks>
        </member>
        <member name="M:MpesaLib.IMpesaClient.QueryAccountBalanceAsync(MpesaLib.AccountBalanceDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Queries MPESA Paybill Account balance.
            </summary>
            <param name="accountBalanceQueryDto">Account balance query data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.QueryAccountBalance</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
        </member>
        <member name="M:MpesaLib.IMpesaClient.QueryAccountBalance(MpesaLib.AccountBalanceDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Queries MPESA Paybill Account balance.
            </summary>
            <param name="accountBalanceQueryDto">Account balance query data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.QueryAccountBalance</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
        </member>
        <member name="M:MpesaLib.IMpesaClient.MakeB2BPaymentAsync(MpesaLib.BusinessToBusinessDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Makes a Business to Business payment request between Paybill numbers.
            </summary>
            <param name="businessToBusinessDto">B2B data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.BusinessToBusiness</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
        </member>
        <member name="M:MpesaLib.IMpesaClient.MakeB2BPayment(MpesaLib.BusinessToBusinessDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Makes a Business to Business payment request between Paybill numbers.
            </summary>
            <param name="businessToBusinessDto">B2B data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.BusinessToBusiness</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
        </member>
        <member name="M:MpesaLib.IMpesaClient.MakeB2CPaymentAsync(MpesaLib.BusinessToCustomerDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Makes a Business to Customer payment request. Paybill to Phone Number.
            </summary>
            <param name="businessToCustomerDto">B2C data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.BusinessToCustomer</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
            <remarks>
            Suitable for refunds, rewards or just about any transaction that involves a business paying a customer.
            </remarks>
        </member>
        <member name="M:MpesaLib.IMpesaClient.MakeB2CPayment(MpesaLib.BusinessToCustomerDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Makes a Business to Customer payment request. Paybill to Phone Number.
            </summary>
            <param name="businessToCustomerDto">B2C data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.BusinessToCustomer</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
            <remarks>
            Suitable for refunds, rewards or just about any transaction that involves a business paying a customer.
            </remarks>
        </member>
        <member name="M:MpesaLib.IMpesaClient.MakeC2BPaymentAsync(MpesaLib.CustomerToBusinessSimulateDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Simulates a Customer to Business payment request.
            </summary>
            <param name="customerToBusinessSimulateDto">C2B data transfer object</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.CustomerToBusinessSimulate</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
            <remarks>
            Use only for Simulation/testing. In production use <c>RegisterC2BUrlAsync</c> method to register 
            endpoints in your application that receive customer initiated transactions from the MPESA API
            for confirmation and/or validation
            </remarks>
        </member>
        <member name="M:MpesaLib.IMpesaClient.MakeC2BPayment(MpesaLib.CustomerToBusinessSimulateDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Simulates a Customer to Business payment request.
            </summary>
            <param name="customerToBusinessSimulateDto">C2B data transfer object</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.CustomerToBusinessSimulate</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
            <remarks>
            Use only for Simulation/testing. In production use <c>RegisterC2BUrlAsync</c> method to register 
            endpoints in your application that receive customer initiated transactions from the MPESA API
            for confirmation and/or validation
            </remarks>
        </member>
        <member name="M:MpesaLib.IMpesaClient.RegisterC2BUrlAsync(MpesaLib.CustomerToBusinessRegisterUrlDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Registers Customer to Business Confirmation and Validation URLs.
            </summary>
            <param name="customerToBusinessRegisterUrlDto">C2B Register URLs data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.RegisterC2BUrl</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
        </member>
        <member name="M:MpesaLib.IMpesaClient.RegisterC2BUrl(MpesaLib.CustomerToBusinessRegisterUrlDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Registers Customer to Business Confirmation and Validation URLs.
            </summary>
            <param name="customerToBusinessRegisterUrlDto">C2B Register URLs data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.RegisterC2BUrl</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
        </member>
        <member name="M:MpesaLib.IMpesaClient.ReverseMpesaTransactionAsync(MpesaLib.ReversalDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Reverses a Mpesa Transaction.
            </summary>
            <param name="reversalDto">Reversal data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.ReverseMpesaTransaction</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
        </member>
        <member name="M:MpesaLib.IMpesaClient.ReverseMpesaTransaction(MpesaLib.ReversalDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Reverses a Mpesa Transaction.
            </summary>
            <param name="reversalDto">Reversal data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.ReverseMpesaTransaction</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
        </member>
        <member name="M:MpesaLib.IMpesaClient.QueryMpesaTransactionStatusAsync(MpesaLib.MpesaTransactionStatusDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Queries the status of an Mpesa Transaction.
            </summary>
            <param name="mpesaTransactionStatusDto">Transaction Status data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.QueryMpesaTransactionStatus</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
        </member>
        <member name="M:MpesaLib.IMpesaClient.QueryMpesaTransactionStatus(MpesaLib.MpesaTransactionStatusDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Queries the status of an Mpesa Transaction.
            </summary>
            <param name="mpesaTransactionStatusDto">Transaction Status data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.QueryMpesaTransactionStatus</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
        </member>
        <member name="T:MpesaLib.LipaNaMpesaOnlineDto">
            <summary>
            STK Push data transfer object
            </summary>
        </member>
        <member name="P:MpesaLib.LipaNaMpesaOnlineDto.BusinessShortCode">
            <summary>
            This is organizations shortcode (Paybill or Buygoods - A 5 to 6 digit account number) 
            used to identify an organization and receive the transaction.
            </summary>
        </member>
        <member name="P:MpesaLib.LipaNaMpesaOnlineDto.Timestamp">
            <summary>
            This is the Timestamp of the transaction, 
            normaly in the formart of YEAR+MONTH+DATE+HOUR+MINUTE+SECOND (YYYYMMDDHHMMSS) 
            Each part should be atleast two digits apart from the year which takes four digits.        
            </summary>
        </member>
        <member name="P:MpesaLib.LipaNaMpesaOnlineDto.TransactionType">
            <summary>
            This is the transaction type that is used to identify the transaction when sending the request to M-Pesa. 
            The transaction type for M-Pesa Express is "CustomerPayBillOnline" 
            </summary>
        </member>
        <member name="P:MpesaLib.LipaNaMpesaOnlineDto.Amount">
            <summary>
            This is the Amount transacted, normally a numeric value. Money that customer pays to the Shorcode. 
            Only whole numbers are supported.
            </summary>
        </member>
        <member name="P:MpesaLib.LipaNaMpesaOnlineDto.PartyA">
            <summary>
            The phone number sending money. The parameter expected is a Valid Safaricom Mobile Number 
            that is M-Pesa registered in the format 2547XXXXXXXX
            </summary>
        </member>
        <member name="P:MpesaLib.LipaNaMpesaOnlineDto.PartyB">
            <summary>
            The organization receiving the funds. The parameter expected is a 5 to 6 digit.
            This can be the same as BusinessShortCode value.
            </summary>
        </member>
        <member name="P:MpesaLib.LipaNaMpesaOnlineDto.PhoneNumber">
            <summary>
            The Mobile Number to receive the STK Pin Prompt. 
            This number can be the same as PartyA value.
            </summary>
        </member>
        <member name="P:MpesaLib.LipaNaMpesaOnlineDto.CallBackURL">
            <summary>
            A CallBack URL is a valid secure URL that is used to receive notifications from M-Pesa API. 
            It is the endpoint to which the results will be sent by M-Pesa API.
            </summary>
        </member>
        <member name="P:MpesaLib.LipaNaMpesaOnlineDto.AccountReference">
            <summary>
            Account Reference: This is an Alpha-Numeric parameter that is defined by your system as an Identifier 
            of the transaction for CustomerPayBillOnline transaction type. Along with the business name, 
            this value is also displayed to the customer in the STK PIN Prompt message. 
            Maximum of 12 characters.
            </summary>
        </member>
        <member name="P:MpesaLib.LipaNaMpesaOnlineDto.TransactionDesc">
            <summary>
            This is any additional information/comment that can be sent along with the request from your system. 
            Maximum of 13 Characters.
            </summary>
        </member>
        <member name="P:MpesaLib.LipaNaMpesaOnlineDto.Passkey">
            <summary>
            Lipa Na Mpesa Online PassKey
            Provide the Passkey only if you want MpesaLib to Encode the Password for you.
            </summary>
        </member>
        <member name="P:MpesaLib.LipaNaMpesaOnlineDto.Password">
            <summary>
            This is the password used for encrypting the request sent: A base64 encoded string. 
            The base64 string is a combination of Shortcode+Passkey+Timestamp
            The Defualt value is set by a private method that creates the necessary base64 encoded string
            Don't set this property if you have set the passKey property.
            </summary>
        </member>
        <member name="M:MpesaLib.LipaNaMpesaOnlineDto.#ctor(System.String,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Mpesa Lipa Na Mpesa STK Push data transfer object
            </summary>
            <param name="businessShortCode">
            This is organizations shortcode (Paybill or Buygoods - A 5 to 6 digit account number) 
            used to identify an organization and receive the transaction.
            </param>
            <param name="timeStamp">
            This is the Timestamp of the transaction, 
            normaly in the formart of YEAR+MONTH+DATE+HOUR+MINUTE+SECOND (YYYYMMDDHHMMSS) 
            Each part should be atleast two digits apart from the year which takes four digits.    
            </param>
            <param name="transactionType">
            This is the transaction type that is used to identify the transaction when sending the request to M-Pesa. 
            The transaction type for M-Pesa Express is "CustomerPayBillOnline" 
            </param>
            <param name="amount">
             This is the Amount transacted, normally a numeric value. Money that customer pays to the Shorcode. 
            Only whole numbers are supported.
            </param>
            <param name="partyA">
             The phone number sending money. The parameter expected is a Valid Safaricom Mobile Number 
            that is M-Pesa registered in the format 2547XXXXXXXX
            </param>
            <param name="partyB">
            The organization receiving the funds. The parameter expected is a 5 to 6 digit.
            This can be the same as BusinessShortCode value.
            </param>
            <param name="phoneNumber"> 
            The Mobile Number to receive the STK Pin Prompt. 
            This number can be the same as PartyA value.
            </param>
            <param name="callBackUrl">
            A CallBack URL is a valid secure URL that is used to receive notifications from M-Pesa API. 
            It is the endpoint to which the results will be sent by M-Pesa API.
            </param>
            <param name="accountReference">
            Account Reference: This is an Alpha-Numeric parameter that is defined by your system as an Identifier 
            of the transaction for CustomerPayBillOnline transaction type. Along with the business name, 
            this value is also displayed to the customer in the STK PIN Prompt message. 
            Maximum of 12 characters.
            </param>
            <param name="transactionDescription">
            This is any additional information/comment that can be sent along with the request from your system. 
            Maximum of 13 Characters.
            </param>
            <param name="passkey">
            Lipa Na Mpesa Online PassKey
            Provide the Passkey only if you want MpesaLib to Encode the Password for you.
            </param>
        </member>
        <member name="M:MpesaLib.LipaNaMpesaOnlineDto.CalculatePassword(System.String,System.String,System.String)">
            <summary>
            This method creates the necessary base64 encoded string that encrypts the request sent 
            </summary>
        </member>
        <member name="T:MpesaLib.LipaNaMpesaQueryDto">
            <summary>
            LipaNaMpesa Query transaction status data transfer object
            </summary>
        </member>
        <member name="P:MpesaLib.LipaNaMpesaQueryDto.BusinessShortCode">
            <summary>
            This is organizations shortcode (Paybill or Buygoods - A 5 to 6 digit account number) 
            used to identify an organization and receive the transaction.
            </summary>
        </member>
        <member name="P:MpesaLib.LipaNaMpesaQueryDto.Passkey">
            <summary>
            Lipa Na Mpesa Online PassKey
            </summary>
        </member>
        <member name="P:MpesaLib.LipaNaMpesaQueryDto.Password">
            <summary>
            This is the password used for encrypting the request sent: A base64 encoded string. 
            The base64 string is a combination of Shortcode+Passkey+Timestamp
            </summary>
        </member>
        <member name="P:MpesaLib.LipaNaMpesaQueryDto.Timestamp">
            <summary>
            This is the Timestamp of the transaction, 
            normaly in the formart of YEAR+MONTH+DATE+HOUR+MINUTE+SECOND (YYYYMMDDHHMMSS) 
            Each part should be atleast two digits apart from the year which takes four digits.
            </summary>
        </member>
        <member name="P:MpesaLib.LipaNaMpesaQueryDto.CheckoutRequestID">
            <summary>
            This is a global unique identifier of the processed checkout transaction request.
            e.g ws_CO_DMZ_123212312_2342347678234
            </summary>
        </member>
        <member name="M:MpesaLib.LipaNaMpesaQueryDto.#ctor(System.String,System.String,System.DateTime,System.String)">
            <summary>
            LipaNaMpesa Query transaction status data transfer object
            </summary>
            <param name="businessShortCode">
            This is organizations shortcode (Paybill or Buygoods - A 5 to 6 digit account number) 
            used to identify an organization and receive the transaction.
            </param>
            <param name="passkey">Lipa Na Mpesa Online PassKey</param>
            <param name="timeStamp">
            This is the Timestamp of the transaction, 
            normaly in the formart of YEAR+MONTH+DATE+HOUR+MINUTE+SECOND (YYYYMMDDHHMMSS) 
            Each part should be atleast two digits apart from the year which takes four digits.
            </param>
            <param name="checkoutRequestId">
            This is a global unique identifier of the processed checkout transaction request.
            e.g ws_CO_DMZ_123212312_2342347678234
            </param>
        </member>
        <member name="M:MpesaLib.LipaNaMpesaQueryDto.CalculatePassword(System.String,System.String,System.String)">
            <summary>
            This method creates the necessary base64 encoded string that encrypts the request sent 
            </summary>
        </member>
        <member name="T:MpesaLib.MpesaClient">
            <summary>
            Mpesa Client Class provides all the methods that make the different API calls to MPESA Server
            </summary>
        </member>
        <member name="M:MpesaLib.MpesaClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            MpesaClient takes in an instance of HttpClient
            </summary>
            <param name="httpClient">HttpClient Instance</param>              
        </member>
        <member name="M:MpesaLib.MpesaClient.GetAuthToken(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            GetAuthTokenAsync is an asynchronous method that requests for and returns an accesstoken from MPESA API Server.
            </summary>
            <param name="consumerKey">ConsumerKey provided by Safaricom in Daraja Portal.</param>
            <param name="consumerSecret">ConsumerSecret provided by Safaricom in Daraja Portal.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.AuthToken</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A string of characters representing the accesstoken.</returns>
        </member>
        <member name="M:MpesaLib.MpesaClient.GetAuthTokenAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            GetAuthTokenAsync is an asynchronous method that requests for and returns an accesstoken from MPESA API Server.
            </summary>
            <param name="consumerKey">ConsumerKey provided by Safaricom in Daraja Portal.</param>
            <param name="consumerSecret">ConsumerSecret provided by Safaricom in Daraja Portal.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.AuthToken</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A string of characters representing the accesstoken.</returns>
        </member>
        <member name="M:MpesaLib.MpesaClient.MakeB2BPayment(MpesaLib.BusinessToBusinessDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Makes a Business to Business payment request between Paybill numbers.
            </summary>
            <param name="businessToBusinessDto">B2B data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.BusinessToBusiness</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
        </member>
        <member name="M:MpesaLib.MpesaClient.MakeB2BPaymentAsync(MpesaLib.BusinessToBusinessDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Makes a Business to Business payment request between Paybill numbers.
            </summary>
            <param name="businessToBusinessDto">B2B data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.BusinessToBusiness</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
        </member>
        <member name="M:MpesaLib.MpesaClient.MakeB2CPayment(MpesaLib.BusinessToCustomerDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Makes a Business to Customer payment request. Paybill to Phone Number.
            </summary>
            <param name="businessToCustomerDto">B2C data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.BusinessToCustomer</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
            <remarks>
            Suitable for refunds, rewards or just about any transaction that involves a business paying a customer.
            </remarks>
        </member>
        <member name="M:MpesaLib.MpesaClient.MakeB2CPaymentAsync(MpesaLib.BusinessToCustomerDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Makes a Business to Customer payment request. Paybill to Phone Number.
            </summary>
            <param name="businessToCustomerDto">B2C data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.BusinessToCustomer</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
            <remarks>
            Suitable for refunds, rewards or just about any transaction that involves a business paying a customer.
            </remarks>
        </member>
        <member name="M:MpesaLib.MpesaClient.MakeC2BPayment(MpesaLib.CustomerToBusinessSimulateDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Simulates a Customer to Business payment request.
            </summary>
            <param name="customerToBusinessSimulateDto">C2B data transfer object</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.CustomerToBusinessSimulate</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
            <remarks>
            Use only for Simulation/testing. In production use <c>RegisterC2BUrlAsync</c> method to register 
            endpoints in your application that receive customer initiated transactions from the MPESA API
            for confirmation and/or validation
            </remarks>
        </member>
        <member name="M:MpesaLib.MpesaClient.MakeC2BPaymentAsync(MpesaLib.CustomerToBusinessSimulateDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Simulates a Customer to Business payment request.
            </summary>
            <param name="customerToBusinessSimulateDto">C2B data transfer object</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.CustomerToBusinessSimulate</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
            <remarks>
            Use only for Simulation/testing. In production use <c>RegisterC2BUrlAsync</c> method to register 
            endpoints in your application that receive customer initiated transactions from the MPESA API
            for confirmation and/or validation
            </remarks>
        </member>
        <member name="M:MpesaLib.MpesaClient.MakeLipaNaMpesaOnlinePayment(MpesaLib.LipaNaMpesaOnlineDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Makes a STK Push payment request to MPESA API Server.
            </summary>
            <param name="lipaNaMpesaOnlineDto">
            Data trnasfer object containing properties for the Lipa Na Mpesa Online API endpoint.
            </param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.LipaNaMpesaOnline</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing LNMO response data from MPESA API Server</returns>
        </member>
        <member name="M:MpesaLib.MpesaClient.MakeLipaNaMpesaOnlinePaymentAsync(MpesaLib.LipaNaMpesaOnlineDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Makes an STK Push payment request to MPESA API Server.
            </summary>
            <param name="lipaNaMpesaOnlineDto">
            Data transfer object containing properties for the Lipa Na Mpesa Online API endpoint.
            </param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.LipaNaMpesaOnline</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing LNMO response data from MPESA API Server</returns>
        </member>
        <member name="M:MpesaLib.MpesaClient.QueryAccountBalance(MpesaLib.AccountBalanceDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Queries MPESA Paybill Account balance.
            </summary>
            <param name="accountBalanceQueryDto">Account balance query data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.QueryAccountBalance</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
        </member>
        <member name="M:MpesaLib.MpesaClient.QueryAccountBalanceAsync(MpesaLib.AccountBalanceDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Queries MPESA Paybill Account balance.
            </summary>
            <param name="accountBalanceQueryDto">Account balance query data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.QueryAccountBalance</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
        </member>
        <member name="M:MpesaLib.MpesaClient.QueryLipaNaMpesaTransaction(MpesaLib.LipaNaMpesaQueryDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Queries Mpesa Online Transaction Status
            </summary>
            <param name="lipaNaMpesaQueryDto">Transaction Query Data transfer object</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.QueryLipaNaMpesaOnlieTransaction</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>
            A JSON string containing data from MPESA API reposnse
            </returns>
            <remarks>
            Use only for transactions initiated with <c>MakeLipaNaMpesaOnlinePayment</c> method.
            For Other transaction based methods (C2B,B2C,B2B) use <c>QueryMpesaTransactionStatusAsync</c> method.
            </remarks>
        </member>
        <member name="M:MpesaLib.MpesaClient.QueryLipaNaMpesaTransactionAsync(MpesaLib.LipaNaMpesaQueryDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Queries Mpesa Online Transaction Status
            </summary>
            <param name="lipaNaMpesaQueryDto">Transaction Query Data transfer object</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.QueryLipaNaMpesaOnlieTransaction</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>
            A JSON string containing data from MPESA API reposnse
            </returns>
            <remarks>
            Use only for transactions initiated with <c>MakeLipaNaMpesaOnlinePayment</c> method.
            For Other transaction based methods (C2B,B2C,B2B) use <c>QueryMpesaTransactionStatusAsync</c> method.
            </remarks>
        </member>
        <member name="M:MpesaLib.MpesaClient.QueryMpesaTransactionStatus(MpesaLib.MpesaTransactionStatusDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Queries status of an Mpesa transaction
            </summary>
            <param name="mpesaTransactionStatusDto"></param>
            <param name="accesstoken">Access Token</param>
            <param name="requestEndPoint">Endpoint Url</param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:MpesaLib.MpesaClient.QueryMpesaTransactionStatusAsync(MpesaLib.MpesaTransactionStatusDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Queries status of an Mpesa transaction
            </summary>
            <param name="mpesaTransactionStatusDto"></param>
            <param name="accesstoken"></param>
            <param name="requestEndPoint"></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns></returns>
        </member>
        <member name="M:MpesaLib.MpesaClient.RegisterC2BUrl(MpesaLib.CustomerToBusinessRegisterUrlDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Registers Customer to Business Confirmation and Validation URLs.
            </summary>
            <param name="customerToBusinessRegisterUrlDto">C2B Register URLs data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.RegisterC2BUrl</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
        </member>
        <member name="M:MpesaLib.MpesaClient.RegisterC2BUrlAsync(MpesaLib.CustomerToBusinessRegisterUrlDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Registers Customer to Business Confirmation and Validation URLs.
            </summary>
            <param name="customerToBusinessRegisterUrlDto">C2B Register URLs data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.RegisterC2BUrl</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
        </member>
        <member name="M:MpesaLib.MpesaClient.ReverseMpesaTransaction(MpesaLib.ReversalDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Reverses a B2B, B2C or C2B M-Pesa transaction.
            </summary>
            <param name="reversalDto">Reversal data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.ReverseMpesaTransaction</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
        </member>
        <member name="M:MpesaLib.MpesaClient.ReverseMpesaTransactionAsync(MpesaLib.ReversalDto,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Reverses a B2B, B2C or C2B M-Pesa transaction.
            </summary>
            <param name="reversalDto">Reversal data transfer object.</param>
            <param name="accesstoken">Acccesstoken retrieved by the <c>GetAuthTokenAsync</c> method.</param>
            <param name="requestEndPoint">Set to <c>RequestEndPoint.ReverseMpesaTransaction</c></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>A JSON string containing data from MPESA API reposnse.</returns>
        </member>
        <member name="M:MpesaLib.MpesaClient.RequestAccessToken(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Method makes the accesstoken request to mpesa api
            </summary>
            <param name="consumerKey"></param>
            <param name="consumerSecret"></param>
            <param name="requestEndPoint"></param>
            <param name="cancellationToken">Cancellation Token</param>
            <returns>string representing accesstoken</returns>
        </member>
        <member name="M:MpesaLib.MpesaClient.MpesaHttpRequest(System.Object,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Makes HttpRequest to mpesa api server
            </summary>
            <param name="Dto">Data transfer object</param>
            <param name="token">Mpesa Accesstoken</param>
            <param name="Endpoint">Request endpoint</param>
            <param name="cancellationToken">Cancellation Token</param>        
            <returns>Mpesa API response</returns>
        </member>
        <member name="T:MpesaLib.MpesaTransactionStatusDto">
            <summary>
            Mpesa Transaction Status Query data transfer object
            </summary>
        </member>
        <member name="P:MpesaLib.MpesaTransactionStatusDto.Initiator">
            <summary>
            The name of Initiator to initiating  the request.
            This is the credential/username used to authenticate the transaction request.
            </summary>
        </member>
        <member name="P:MpesaLib.MpesaTransactionStatusDto.SecurityCredential">
            <summary>
            Encrypted password for the initiator to authenticate the transaction request.
            Use <c>Credentials.EncryptPassword</c> method available under MpesaLib.Helpers to encrypt the password.
            </summary>
        </member>
        <member name="P:MpesaLib.MpesaTransactionStatusDto.CommandID">
            <summary>
            Takes only 'TransactionStatusQuery' command id
            The default value has been set to that so you don't have to set this property.
            </summary>
        </member>
        <member name="P:MpesaLib.MpesaTransactionStatusDto.TransactionID">
            <summary>
            Unique identifier to identify a transaction on M-Pesa. e.g LKXXXX1234
            </summary>
        </member>
        <member name="P:MpesaLib.MpesaTransactionStatusDto.PartyA">
            <summary>
            Organization/MSISDN receiving the transaction
            </summary>
        </member>
        <member name="P:MpesaLib.MpesaTransactionStatusDto.IdentifierType">
            <summary>
            Type of organization receiving the transaction
            1 – MSISDN
            2 – Till Number
            4 – Organization short code
            </summary>
        </member>
        <member name="P:MpesaLib.MpesaTransactionStatusDto.Remarks">
            <summary>
            Comments that are sent along with the transaction
            </summary>
        </member>
        <member name="P:MpesaLib.MpesaTransactionStatusDto.QueueTimeOutURL">
            <summary>
            The path that stores information of time out transaction. https://ip or domain:port/path
            </summary>
        </member>
        <member name="P:MpesaLib.MpesaTransactionStatusDto.ResultURL">
            <summary>
            The path that stores information of transaction. https://ip or domain:port/path
            </summary>
        </member>
        <member name="P:MpesaLib.MpesaTransactionStatusDto.Occasion">
            <summary>
            Optional Parameter. (upto 100 characters)
            </summary>
        </member>
        <member name="M:MpesaLib.MpesaTransactionStatusDto.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Mpesa Transaction Status Query data transfer object
            </summary>
            <param name="initiator">
            The name of Initiator to initiating  the request.
            This is the credential/username used to authenticate the transaction request.
            </param>
            <param name="securityCredential">
            Encrypted password for the initiator to authenticate the transaction request.
            Use <c>Credentials.EncryptPassword</c> method available under MpesaLib.Helpers to encrypt the password.
            </param>
            <param name="transactionId">Unique identifier to identify a transaction on M-Pesa. e.g LKXXXX1234</param>
            <param name="partyA">Organization/MSISDN receiving the transaction</param>
            <param name="identifierType">
            Type of organization receiving the transaction
            1 – MSISDN
            2 – Till Number
            4 – Organization short code
            </param>
            <param name="remarks">
            Comments that are sent along with the transaction
            </param>
            <param name="queueTimeoutUrl">The path that stores information of time out transaction. https://ip or domain:port/path</param>
            <param name="resultUrl">The path that stores information of transaction. https://ip or domain:port/path</param>
            <param name="occasion">Optional Parameter. (upto 100 characters)</param>
        </member>
        <member name="T:MpesaLib.RequestEndPoint">
            <summary>
            Provides Strongly typed properties from the MPESA API request endpoints
            </summary>
        </member>
        <member name="P:MpesaLib.RequestEndPoint.SandboxBaseAddress">
            <summary>
            Sandbox MPESA API BaseAdress, use in a development environment
            </summary>
        </member>
        <member name="P:MpesaLib.RequestEndPoint.LiveBaseAddress">
            <summary>
            Live MPESA API BaseAdress, use in staging, production  environments
            </summary>
        </member>
        <member name="P:MpesaLib.RequestEndPoint.LipaNaMpesaOnline">
            <summary>
            LipaNaMpesaOnline (STK Push) API Request Endpoint
            </summary>
        </member>
        <member name="P:MpesaLib.RequestEndPoint.QueryLipaNaMpesaOnlieTransaction">
            <summary>
            QueryLipaNaMpesaOnlieTransaction API Request Endpoint
            </summary>
        </member>
        <member name="P:MpesaLib.RequestEndPoint.CustomerToBusinessSimulate">
            <summary>
            CustomerToBusinessSimulate API Request Endpoint
            </summary>
        </member>
        <member name="P:MpesaLib.RequestEndPoint.BusinessToBusiness">
            <summary>
            BusinessToBusiness API Request Endpoint
            </summary>
        </member>
        <member name="P:MpesaLib.RequestEndPoint.BusinessToCustomer">
            <summary>
            BusinessToCustomer API Request Endpoint
            </summary>
        </member>
        <member name="P:MpesaLib.RequestEndPoint.AuthToken">
            <summary>
            AuthToken Request API Endpoint
            </summary>
        </member>
        <member name="P:MpesaLib.RequestEndPoint.QueryAccountBalance">
            <summary>
            QueryAccountBalance API Request Endpoint
            </summary>
        </member>
        <member name="P:MpesaLib.RequestEndPoint.RegisterC2BUrl">
            <summary>
            RegisterC2BUrl API Request Endpoint
            </summary>
        </member>
        <member name="P:MpesaLib.RequestEndPoint.ReverseMpesaTransaction">
            <summary>
            ReverseMpesaTransaction API Request Endpoint
            </summary>
        </member>
        <member name="P:MpesaLib.RequestEndPoint.QueryMpesaTransactionStatus">
            <summary>
            QueryMpesaTransactionStatus API Request Endpoint
            </summary>
        </member>
        <member name="T:MpesaLib.Responses.TokenResponse">
            <summary>
            Accesstoken data transfer object
            </summary>
        </member>
        <member name="P:MpesaLib.Responses.TokenResponse.AccessToken">
            <summary>
            Access token to access other APIs
            </summary>
        </member>
        <member name="P:MpesaLib.Responses.TokenResponse.ExpiresIn">
            <summary>
            time token expires
            </summary>
        </member>
        <member name="M:MpesaLib.Responses.TokenResponse.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="access_token">Access token required to access other Mpesa API endpoints</param>
            <param name="expires_in">time in seconds after which the token expires</param>
        </member>
        <member name="T:MpesaLib.ReversalDto">
            <summary>
            Transaction reversal data transfer object
            </summary>
        </member>
        <member name="P:MpesaLib.ReversalDto.Initiator">
            <summary>
            The name of Initiator to initiating  the request
            </summary>
        </member>
        <member name="P:MpesaLib.ReversalDto.SecurityCredential">
            <summary>
            Encrypted password for the initiator to authenticate the transaction request.
            Use <c>Credentials.EncryptPassword</c> method available under MpesaLib.Helpers to encrypt the password.
            </summary>
        </member>
        <member name="P:MpesaLib.ReversalDto.CommandID">
            <summary>
            Takes only 'TransactionReversal' Command id.
            The default value has been set to that so you don't have to set this property.
            </summary>
        </member>
        <member name="P:MpesaLib.ReversalDto.TransactionID">
            <summary>
            Unique identifier to identify a transaction on M-Pesa. e.g LKXXXX1234
            </summary>
        </member>
        <member name="P:MpesaLib.ReversalDto.ReceiverParty">
            <summary>
            Organization receiving the transaction (Shortcode)
            </summary>
        </member>
        <member name="P:MpesaLib.ReversalDto.RecieverIdentifierType">
            <summary>
            Type of organization receiving the transaction.
            11 - Organization Identifier on M-Pesa
            </summary>
        </member>
        <member name="P:MpesaLib.ReversalDto.Remarks">
            <summary>
            Comments that are sent along with the transaction. (Upto 100 characters)
            </summary>
        </member>
        <member name="P:MpesaLib.ReversalDto.QueueTimeOutURL">
            <summary>
            The path that stores information of time out transaction.
            </summary>
        </member>
        <member name="P:MpesaLib.ReversalDto.ResultURL">
            <summary>
            The path that stores information of transaction 
            </summary>
        </member>
        <member name="P:MpesaLib.ReversalDto.Occasion">
            <summary>
            Optional Parameter (upto 100 characters)
            </summary>
        </member>
        <member name="M:MpesaLib.ReversalDto.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Transaction reversal data transfer object
            </summary>
            <param name="initiator">The name of Initiator to initiating  the request</param>
            <param name="securityCredential">
            Encrypted password for the initiator to authenticate the transaction request.
            Use <c>Credentials.EncryptPassword</c> method available under MpesaLib.Helpers to encrypt the password.
            </param>
            <param name="transactionId">Unique identifier to identify a transaction on M-Pesa. e.g LKXXXX1234</param>
            <param name="receiverparty">Organization receiving the transaction (Shortcode)</param>
            <param name="receiverIdentifierType">
            Type of organization receiving the transaction.
            11 - Organization Identifier on M-Pesa
            </param>
            <param name="remarks">Comments that are sent along with the transaction. (Upto 100 characters)</param>
            <param name="queueTimeoutUrl">The path that stores information of time out transaction.</param>
            <param name="resultUrl">The path that stores information of transaction </param>
            <param name="occasion"> Optional Parameter (upto 100 characters)</param>
        </member>
        <member name="T:MpesaLib.TransactType">
            <summary>
            Trasaction Types and/or Command IDs
            </summary>
        </member>
        <member name="F:MpesaLib.TransactType.CustomerPayBillOnline">
            <summary>
            CustomerPayBillOnline Command ID
            </summary>
        </member>
        <member name="F:MpesaLib.TransactType.CustomerBuyGoodsOnline">
            <summary>
            CustomerBuyGoodsOnline Command ID
            </summary>
        </member>
        <member name="F:MpesaLib.TransactType.TransactionStatusQuery">
            <summary>
            TransactionStatusQuery Command ID
            </summary>
        </member>
        <member name="F:MpesaLib.TransactType.TransactionReversal">
            <summary>
            TransactionReversal Command ID
            </summary>
        </member>
        <member name="F:MpesaLib.TransactType.BusinessPayBill">
            <summary>
            BusinessPayBill Command ID
            </summary>
        </member>
        <member name="F:MpesaLib.TransactType.MerchantToMerchantTransfer">
            <summary>
            MerchantToMerchantTransfer Command ID
            </summary>
        </member>
        <member name="F:MpesaLib.TransactType.MerchantTransferFromMerchantToWorking">
            <summary>
            MerchantTransferFromMerchantToWorking Command ID
            </summary>
        </member>
        <member name="F:MpesaLib.TransactType.MerchantServicesMMFAccountTransfer">
            <summary>
            MerchantServicesMMFAccountTransfer Command ID
            </summary>
        </member>
        <member name="F:MpesaLib.TransactType.AgencyFloatAdvance">
            <summary>
            AgencyFloatAdvance Command ID
            </summary>
        </member>
        <member name="F:MpesaLib.TransactType.SalaryPayment">
            <summary>
            Use with B2C. Supports sending money to both registered and unregistered M-Pesa customers
            </summary>
        </member>
        <member name="F:MpesaLib.TransactType.BusinessPayment">
            <summary>
            USe with B2C. A normal business to customer payment, supports only M-Pesa registered customers
            </summary>
        </member>
        <member name="F:MpesaLib.TransactType.PromotionPayment">
            <summary>
            Use with B2C. A promotional payment to customers.The M-Pesa notification message is a 
            congratulatory message. Supports only M-Pesa registered customers.
            </summary>
        </member>
    </members>
</doc>
